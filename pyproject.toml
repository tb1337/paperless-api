[build-system]
requires = ["setuptools>=69.0"]
build-backend = "setuptools.build_meta"

[project]
name = "pypaperless"
version = "0.0.0" # set on release
license = {text = "MIT License"}
description = "Little api wrapper for the paperless(-ngx) dms."
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Tobias Schulz", email = "public.dev@tbsch.de"}
]
keywords = [
    "library", "async", "api-client", "python3", "paperless-ngx"
]
classifiers = [
    "Environment :: Console",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3"
]
dependencies = [
    "aiohttp==3.9.3",
    "yarl==1.9.4"
]

[project.urls]
"Homepage" = "https://github.com/tb1337/paperless-api"
"GitHub: Source" = "https://github.com/tb1337/paperless-api"
"GitHub: Issues" = "https://github.com/tb1337/paperless-api/issues"
"Coverage: codecov" = "https://codecov.io/gh/tb1337/paperless-api"

[project.optional-dependencies]
test = [
    "black==24.1.1",
    "codespell==2.2.6",
    "coverage==7.4.1",
    "mypy==1.8.0",
    "ruff==0.2.1",
    "pytest<8.0.0",
    "pytest-asyncio==0.23.5",
    "pytest-aiohttp==1.0.5",
    "pytest-cov==4.1.0",
    "pre-commit==3.6.0",
    "pylint==3.0.3",
    "fastapi==0.109.2",
    "httpx==0.26.0"
]

[tool.setuptools]
platforms = ["any"]
zip-safe  = false
packages = ["pypaperless"]
include-package-data = true

[tool.setuptools.package-data]
pypaperless = ["py.typed"]

[tool.black]
target-version = ['py311']
line-length = 100

[tool.codespell]
ignore-words-list = "dependees,"

[tool.mypy]
platform = "linux"
python_version = "3.11"

follow_imports = "normal"

check_untyped_defs = true
disallow_any_generics = false
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
pythonpath = [
  ".",
  "pypaperless",
]
testpaths = [
    "tests",
]
norecursedirs = [
    ".git",
]
log_format = "%(asctime)s.%(msecs)03d %(levelname)-8s %(threadName)s %(name)s:%(filename)s:%(lineno)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
asyncio_mode = "auto"

[tool.ruff]
fix = true
show-fixes = true
line-length = 100
target-version = "py311"
lint.select = ["E", "F", "W", "I", "N", "D", "UP", "PL", "Q", "SIM", "TID", "ARG"]
lint.ignore = ["PLR2004", "N818"]
lint.unfixable = ["F841"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
suppress-dummy-args = true

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings.
convention = "pep257"

[tool.ruff.lint.pylint]
max-branches=25
max-returns=15
max-args=10
max-statements=50
